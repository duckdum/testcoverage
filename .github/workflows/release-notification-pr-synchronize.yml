name: Release Notification on PR Updated

on:
  pull_request:
    types: [synchronize]
    branches:
      - 'release-**'

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch `thread_ts` from PR description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=$(jq -r .pull_request.number "$GITHUB_EVENT_PATH")
          pr_body=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/pulls/$pr_number" | jq -r .body)
          message_ts=$(echo "$pr_body" | grep -oP '^Slack message_ts: \K\S+')
          echo "Retrieved message_ts: $message_ts"
          echo "message_ts=$message_ts" >> $GITHUB_ENV

      - name: Fetch and send new commit message to Slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message_ts: ${{ env.message_ts }}
          SLACK_CHANNEL: 'C05PW7HGP36'  # Replace with your Slack channel ID
        run: |
          declare -A github_to_slack_map=(
            ["mduchev"]="@Mihail Duchev"
            ["krzysztof-kolakowski"]="@Krzysztof Kołakowski"
            ["opchaves"]="@Paulo Chaves"
            ["ommiles"]="@O.M. Miles"
            ["duckdum"]="@eduardo"
            ["rminhoto"]="@Roberto"
            ["pecabum"]="@Petar Petrov"
            ["pmwthunkable"]="@Paul Medlock-Walton"
            ["JanhaviDahihande"]="@janhavi"
            ["kkrogmerio"]="@Adrian"
            ["TingC"]="@Ting Chou"
            ["andresmechali"]="@Andrés Mechali"
            ["Comum"]="@Miguel Ribeiro"
            ["weihuali0509"]="@Wei Li"
          )

          commits_url=$(jq -r .pull_request.commits_url "$GITHUB_EVENT_PATH")
          repo_url=$(jq -r .repository.html_url "$GITHUB_EVENT_PATH")
          latest_commit=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $commits_url | jq -r '.[-1] | @base64')
          
          if [ -z "$latest_commit" ]; then
            echo "No new commit found."
            exit 0
          fi

          _jq() {
            echo ${latest_commit} | base64 --decode | jq -r ${1}
          }
          commit_message=$(_jq '.commit.message')
          commit_sha=$(_jq '.sha')
          commit_author=$(_jq '.commit.author.name')
          commit_url="$repo_url/commit/$commit_sha"
          github_user=$(_jq '.author.login')
          slack_user=${github_to_slack_map[$github_user]}
          if [ -z "$slack_user" ]; then
            slack_user=$commit_author
          fi
          commit_message_formatted="<$commit_url|$commit_message> by $slack_user"

          if [ -z "$commit_message_formatted" ]; then
            commit_message_formatted="No new commits found."
          fi
          echo "Commit message: $commit_message_formatted"
          
          payload=$(jq -n --arg channel "$SLACK_CHANNEL" --arg text "New commit added: $commit_message_formatted" --arg thread_ts "$message_ts" '{
            channel: $channel,
            text: $text,
            thread_ts: $thread_ts
          }')
          echo "Payload: $payload"
          curl -s -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" -H 'Content-type: application/json' --data "$payload" https://slack.com/api/chat.postMessage
          