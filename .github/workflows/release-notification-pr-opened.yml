name: Release Notification on PR Opened

on:
  pull_request:
    types: [opened, reopened]

jobs:
  notify:
    if: startsWith(github.event.pull_request.head.ref, 'release-')
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Send initial message to Slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: 'C05PW7HGP36'  # Replace with your Slack channel ID
        run: |
          pr_title=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH")
          pr_url=$(jq -r .pull_request.html_url "$GITHUB_EVENT_PATH")
          branch_name=$(jq -r .pull_request.head.ref "$GITHUB_EVENT_PATH")
          target_branch=$(jq -r .pull_request.base.ref "$GITHUB_EVENT_PATH")
          initial_message_response=$(curl -s -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" -H 'Content-type: application/json' --data "{
            \"channel\": \"$SLACK_CHANNEL\",
            \"text\": \"New release pull request created: <$pr_url|$pr_title>\nBranch: $branch_name -> $target_branch\"
          }" https://slack.com/api/chat.postMessage)
          echo "Initial message response: $initial_message_response"
          if echo "$initial_message_response" | jq -e .ok > /dev/null; then
            message_ts=$(echo "$initial_message_response" | jq -r .ts)
            echo "Message TS: $message_ts"
            curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" -H 'Content-Type: application/json' --data "{
              \"body\": \"Slack message_ts: $message_ts\"
            }" "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/issues/$GITHUB_EVENT_PULL_REQUEST_NUMBER/comments"
          else
            echo "Failed to retrieve message_ts"
            exit 1
          fi
